diff -urN org/gudy/azureus2/ui/swt.orig/osx/Start.java org/gudy/azureus2/ui/swt/osx/Start.java
--- org/gudy/azureus2/ui/swt.orig/osx/Start.java	2006-02-09 19:43:24.000000000 -0800
+++ org/gudy/azureus2/ui/swt/osx/Start.java	1969-12-31 16:00:00.000000000 -0800
@@ -1,74 +0,0 @@
-/*
- * Created on May 30, 2004
- * Created by Olivier Chalouhi
- * Copyright (C) 2004, 2005, 2006 Aelitis, All Rights Reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
- * 
- * AELITIS, SAS au capital de 46,603.30 euros
- * 8 Allee Lenotre, La Grille Royale, 78600 Le Mesnil le Roi, France.
- *
- */
-package org.gudy.azureus2.ui.swt.osx;
-
-import java.io.OutputStreamWriter;
-import java.io.PrintWriter;
-import java.net.Socket;
-
-import org.gudy.azureus2.core3.util.Debug;
-
-
-public class Start {
-    public Start(String args[]) {
-//      if(args.length == 0)
-//        return;
-
-      Socket sck = null;
-      PrintWriter pw = null;
-      try {          
-        System.out.println("StartSocket: passing startup args to already-running Azureus java process.");
-        
-        sck = new Socket("127.0.0.1", 6880);
-        
-        pw = new PrintWriter(new OutputStreamWriter(sck.getOutputStream(),"UTF8"));
-        
-        StringBuffer buffer = new StringBuffer("Azureus Start Server Access;args;");
-        
-        for(int i = 0 ; i < args.length ; i++) {
-          String arg = args[i].replaceAll("&","&&").replaceAll(";","&;");
-          buffer.append(arg);
-          buffer.append(';');
-        }
-       
-        pw.println(buffer.toString());
-        pw.flush();
-      } catch(Exception e) {
-      	Debug.printStackTrace( e );
-      } finally {
-        try {
-          if (pw != null)
-            pw.close();
-        } catch (Exception e) {
-        }
-        try {
-          if (sck != null)
-            sck.close();
-        } catch (Exception e) {
-        }
-      }
-    }
-    
-    public static void main(String args[]) {
-      new Start(args);
-    }
-  }
\ No newline at end of file
diff -urN org/gudy/azureus2/ui/swt.orig/win32/Win32UIEnhancer.java org/gudy/azureus2/ui/swt/win32/Win32UIEnhancer.java
--- org/gudy/azureus2/ui/swt.orig/win32/Win32UIEnhancer.java	2008-07-03 02:43:40.000000000 -0700
+++ org/gudy/azureus2/ui/swt/win32/Win32UIEnhancer.java	1969-12-31 16:00:00.000000000 -0800
@@ -1,135 +0,0 @@
-/**
- * Copyright (C) 2006 Aelitis, All Rights Reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- * AELITIS, SAS au capital de 63.529,40 euros
- * 8 Allee Lenotre, La Grille Royale, 78600 Le Mesnil le Roi, France.
- *
- */
-
-package org.gudy.azureus2.ui.swt.win32;
-
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.graphics.Image;
-import org.eclipse.swt.graphics.ImageData;
-import org.eclipse.swt.internal.win32.OS;
-import org.eclipse.swt.internal.win32.TCHAR;
-
-/**
- * @author TuxPaper
- * @created Nov 29, 2006
- *
- * Note: You can safely exclude this class from the build path.
- * All calls to this class use (or at least should use) reflection
- */
-public class Win32UIEnhancer
-{
-	static String findProgramKey(String extension) {
-		if (extension == null)
-			SWT.error(SWT.ERROR_NULL_ARGUMENT);
-		if (extension.length() == 0)
-			return null;
-		if (extension.charAt(0) != '.')
-			extension = "." + extension; //$NON-NLS-1$
-		/* Use the character encoding for the default locale */
-		TCHAR key = new TCHAR(0, extension, true);
-		int[] phkResult = new int[1];
-		if (OS.RegOpenKeyEx(OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) != 0) {
-			return null;
-		}
-		int[] lpcbData = new int[1];
-		int result = OS.RegQueryValueEx(phkResult[0], null, 0, null, (TCHAR) null,
-				lpcbData);
-		if (result == 0) {
-			TCHAR lpData = new TCHAR(0, lpcbData[0] / TCHAR.sizeof);
-			result = OS.RegQueryValueEx(phkResult[0], null, 0, null, lpData, lpcbData);
-			if (result == 0)
-				return lpData.toString(0, lpData.strlen());
-		}
-		OS.RegCloseKey(phkResult[0]);
-		return null;
-	}
-
-    public static ImageData getBigImageData(String extension) {
-		String key = findProgramKey(extension);
-		if (key == null) {
-			return null;
-		}
-
-		/* Icon */
-		String DEFAULT_ICON = "\\DefaultIcon"; //$NON-NLS-1$
-		String iconName = getKeyValue(key + DEFAULT_ICON, true);
-		if (iconName == null)
-			iconName = ""; //$NON-NLS-1$
-
-		int nIconIndex = 0;
-		String fileName = iconName;
-		int index = iconName.indexOf(',');
-		if (index != -1) {
-			fileName = iconName.substring(0, index);
-			String iconIndex = iconName.substring(index + 1, iconName.length()).trim();
-			try {
-				nIconIndex = Integer.parseInt(iconIndex);
-			} catch (NumberFormatException e) {
-			}
-		}
-		/* Use the character encoding for the default locale */
-		TCHAR lpszFile = new TCHAR(0, fileName, true);
-		int[] phiconSmall = null, phiconLarge = new int[1];
-		OS.ExtractIconEx(lpszFile, nIconIndex, phiconLarge, phiconSmall, 1);
-		if (phiconLarge[0] == 0) {
-			return null;
-		}
-		Image image = Image.win32_new(null, SWT.ICON, phiconLarge[0]);
-		ImageData imageData = image.getImageData();
-		image.dispose();
-		return imageData;
-	}
-
-	static String getKeyValue(String string, boolean expand) {
-		/* Use the character encoding for the default locale */
-		TCHAR key = new TCHAR(0, string, true);
-		int[] phkResult = new int[1];
-		if (OS.RegOpenKeyEx(OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) != 0) {
-			return null;
-		}
-		String result = null;
-		int[] lpcbData = new int[1];
-		if (OS.RegQueryValueEx(phkResult[0], (TCHAR) null, 0, null, (TCHAR) null,
-				lpcbData) == 0) {
-			result = "";
-			int length = lpcbData[0] / TCHAR.sizeof;
-			if (length != 0) {
-				/* Use the character encoding for the default locale */
-				TCHAR lpData = new TCHAR(0, length);
-				if (OS.RegQueryValueEx(phkResult[0], null, 0, null, lpData, lpcbData) == 0) {
-					if (!OS.IsWinCE && expand) {
-						length = OS.ExpandEnvironmentStrings(lpData, null, 0);
-						if (length != 0) {
-							TCHAR lpDst = new TCHAR(0, length);
-							OS.ExpandEnvironmentStrings(lpData, lpDst, length);
-							result = lpDst.toString(0, Math.max(0, length - 1));
-						}
-					} else {
-						length = Math.max(0, lpData.length() - 1);
-						result = lpData.toString(0, length);
-					}
-				}
-			}
-		}
-		if (phkResult[0] != 0)
-			OS.RegCloseKey(phkResult[0]);
-		return result;
-	}
-}
diff -up azureus-4.2.0.4/org/gudy/azureus2/ui/swt/mainwindow/SWTThread.java.boo-osx azureus-4.2.0.4/org/gudy/azureus2/ui/swt/mainwindow/SWTThread.java
--- org/gudy/azureus2/ui/swt/mainwindow/SWTThread.java.boo-osx	2009-04-16 20:46:42.000000000 +0300
+++ org/gudy/azureus2/ui/swt/mainwindow/SWTThread.java	2009-07-31 19:35:41.000000000 +0300
@@ -153,25 +153,6 @@ public class SWTThread {
 			}
 		});
     
-    if ( Constants.isOSX && SWT.getPlatform().equals("carbon") ){
-    	
-    		// use reflection here so we decouple generic SWT from OSX specific stuff to an extent
-    	
-    	 try{
-    	 	
-            Class ehancerClass = Class.forName("org.gudy.azureus2.ui.swt.osx.CarbonUIEnhancer");
-            
-            Constructor constructor = ehancerClass.getConstructor(new Class[]{});
-            
-            constructor.newInstance(new Object[] {});
-
-        } catch (Exception e) {
-        	
-            Debug.printStackTrace(e);
-        }
-    }
-    
-
 		if (app != null) {
 			app.runInSWTThread();
 			runner = new Thread(new AERunnable() {
diff -up azureus-4.2.0.4/org/gudy/azureus2/ui/swt/osx/Start.java.boo-osx azureus-4.2.0.4/org/gudy/azureus2/ui/swt/osx/Start.java
diff -up azureus-4.2.0.4/org/gudy/azureus2/ui/swt/win32/Win32UIEnhancer.java.boo-osx azureus-4.2.0.4/org/gudy/azureus2/ui/swt/win32/Win32UIEnhancer.java
