diff -up azureus-4.5.0.0/org/gudy/azureus2/pluginsimpl/local/installer/PluginInstallerImpl.java.no-update-manager-PluginInstallerImpl azureus-4.5.0.0/org/gudy/azureus2/pluginsimpl/local/installer/PluginInstallerImpl.java
--- azureus-4.5.0.0/org/gudy/azureus2/pluginsimpl/local/installer/PluginInstallerImpl.java.no-update-manager-PluginInstallerImpl	2010-07-31 01:00:42.000000000 +0300
+++ azureus-4.5.0.0/org/gudy/azureus2/pluginsimpl/local/installer/PluginInstallerImpl.java	2010-08-05 20:57:52.000000000 +0300
@@ -478,112 +478,6 @@ PluginInstallerImpl
 		
 		PluginUpdatePlugin	pup = (PluginUpdatePlugin)pup_pi.getPlugin();
 		
-		UpdateManagerImpl	uman = (UpdateManagerImpl)manager.getDefaultPluginInterface().getUpdateManager();
-		
-		UpdateCheckInstanceImpl	inst = 
-			uman.createEmptyUpdateCheckInstance( 
-					UpdateCheckInstance.UCI_INSTALL,
-					"update.instance.install",
-					low_noise );
-		
-		if ( properties != null ){
-			
-			for ( Map.Entry<Integer,Object> entry: properties.entrySet()){
-				
-				inst.setProperty( entry.getKey(), entry.getValue());
-			}
-		}
-		
-		if ( listener != null ){
-			
-			inst.addListener(
-				new UpdateCheckInstanceListener()
-				{
-					public void
-					cancelled(
-						UpdateCheckInstance		instance )
-					{
-						listener.cancelled();
-					}
-					
-					public void
-					complete(
-						UpdateCheckInstance		instance )
-					{
-						final Update[] updates = instance.getUpdates();
-						
-						if ( updates.length == 0 ){
-														
-							listener.failed( new PluginException( "No updates were added during check process" ));
-							
-						}else{
-							
-							for (int i=0;i<updates.length;i++){
-								
-								updates[i].addListener(
-									new UpdateListener()
-									{
-										private boolean	cancelled;
-										
-										public void 
-										cancelled(
-											Update update) 
-										{
-											cancelled = true;
-											
-											check();
-										}
-										
-										public void 
-										complete(
-											Update update ) 
-										{
-											check();
-										}
-										
-										protected void
-										check()
-										{
-											Update failed_update = null;
-											
-											for ( Update update: updates ){
-												
-												if ( !update.isCancelled() && !update.isComplete()){
-													
-													return;
-												}
-												
-												if ( !update.wasSuccessful()){
-													
-													failed_update = update;
-												}
-											}
-											
-											if ( cancelled ){
-												
-												listener.cancelled();
-												
-											}else{
-												
-												if ( failed_update == null ){
-													
-													listener.completed();
-													
-												}else{
-												
-													listener.failed(
-														new PluginException(
-															"Install of " + failed_update.getName() + " failed" ));
-												}
-											}
-										}
-									});
-							}
-						}
-					}
-				});
-		}
-		
 		try{
 			
 			for (int i=0;i<plugins.length;i++){
@@ -648,47 +542,6 @@ PluginInstallerImpl
 				
 					final PluginInterface dummy_plugin_interface = manager.getPluginInterfaceByID( plugin_id, false );
 					
-					((InstallablePluginImpl)plugin).addUpdate( inst, pup, dummy_plugin, dummy_plugin_interface );
-							
-					inst.addListener(
-						new UpdateCheckInstanceListener()
-						{
-							public void
-							cancelled(
-								UpdateCheckInstance		instance )
-							{
-								try{
-								
-									dummy_plugin_interface.getPluginState().unload();
-									
-								}catch( Throwable e ){
-									
-									Debug.out( "Failed to unload plugin", e );
-								}
-							}
-							
-							public void
-							complete(
-								UpdateCheckInstance		instance )
-							{
-								PluginInterface pi = manager.getPluginInterfaceByID( plugin_id, false );
-								
-								if ( pi != null && pi.getPlugin() instanceof FailedPlugin ){
-									
-									try{
-										pi.getPluginState().unload();
-										
-									}catch( Throwable e ){
-										
-										Debug.out( "Failed to unload plugin", e );
-									}
-								}
-
-							}
-						});
-				}else{
-					
-					((InstallablePluginImpl)plugin).addUpdate( inst, pup, existing_plugin, existing_plugin_interface );
 				}
 			}
 		
@@ -762,154 +615,6 @@ PluginInstallerImpl
 				throw( new PluginException( "Plugin '" + pi.getPluginID() + "' is not loaded from the file system, can't uninstall" ));
 			}
 		}
-		
-		try{
-			UpdateManager	uman = manager.getDefaultPluginInterface().getUpdateManager();
-			
-			UpdateCheckInstance	inst = 
-				uman.createEmptyUpdateCheckInstance(
-						UpdateCheckInstance.UCI_UNINSTALL,
-						"update.instance.uninstall");
-
-			for (int i=0;i<pis.length;i++){
-				
-				final PluginInterface	pi = pis[i];
-				
-				final String	plugin_dir = pi.getPluginDirectoryName();
-
-				inst.addUpdatableComponent(
-					new UpdatableComponent()
-					{
-						public String
-						getName()
-						{
-							return( pi.getPluginName());
-						}
-					
-						public int
-						getMaximumCheckTime()
-						{
-							return( 0 );
-						}
-						
-						public void
-						checkForUpdate(
-							final UpdateChecker	checker )
-						{
-							try{
-								ResourceDownloader rd = 
-									manager.getDefaultPluginInterface().getUtilities().getResourceDownloaderFactory().create( new File( plugin_dir ));
-	
-									// the plugin may have > 1 plugin interfaces, make the name up appropriately
-								
-								String	update_name = "";
-									
-								PluginInterface[]	ifs = manager.getPluginInterfaces();
-								
-							    Arrays.sort( 
-							    		ifs,
-									  	new Comparator()
-										{
-								      		public int 
-											compare(
-												Object o1, 
-												Object o2)
-								      		{
-								      			return(((PluginInterface)o1).getPluginName().compareTo(((PluginInterface)o2).getPluginName()));
-								      		}
-										});
-							    
-								for (int i=0;i<ifs.length;i++){
-									
-									if ( ifs[i].getPluginID().equals(pi.getPluginID())){
-									
-										update_name += (update_name.length()==0?"":",") + ifs[i].getPluginName();
-									}
-								}
-								
-								final Update update = checker.addUpdate(
-									update_name,
-									new String[]{ "Uninstall: " + plugin_dir},
-									pi.getPluginVersion(),
-									rd,
-									pi.getPluginState().isUnloadable()?Update.RESTART_REQUIRED_NO:Update.RESTART_REQUIRED_YES );
-									
-								rd.addListener(
-										new ResourceDownloaderAdapter()
-										{
-											public boolean
-											completed(
-												ResourceDownloader	downloader,
-												InputStream			data )
-											{
-												try{
-													if ( pi.getPluginState().isUnloadable()){
-												
-														pi.getPluginState().unload();
-														
-														FileUtil.recursiveDelete( new File( plugin_dir ));
-													
-													}
-																	
-													UpdateInstaller installer = checker.createInstaller();
-														
-													installer.addRemoveAction( new File( plugin_dir ).getCanonicalPath());
-												
-													update.complete( true );
-													
-													try{
-														PluginInitializer.fireEvent(
-															PluginEvent.PEV_PLUGIN_UNINSTALLED,
-															pi.getPluginID());
-														
-													}catch( Throwable e ){
-														
-														Debug.out( e );
-													}
-												}catch( Throwable e ){
-													
-													update.complete( false );
-													
-													Debug.printStackTrace(e);
-													
-													Logger.log(new LogAlert(LogAlert.REPEATABLE,
-															"Plugin uninstall failed", e));
-												}
-												
-													// don't close the stream as we process it later
-													
-												return( true );
-											}
-											
-											public void
-											failed(
-												ResourceDownloader			downloader,
-												ResourceDownloaderException e )
-											{
-												update.complete( false );
-												
-												if ( !downloader.isCancelled()){
-													
-													Logger.log(new LogAlert(LogAlert.REPEATABLE,
-															"Plugin uninstall failed", e));
-												}
-											}
-										});
-							}finally{
-								
-								checker.completed();
-							}
-								
-						}
-					}, false );
-			}
-
-			inst.start();
-			
-		}catch( Throwable e ){
-			
-			Debug.printStackTrace(e);
-		}
 	}
 	
 	protected PluginInterface
